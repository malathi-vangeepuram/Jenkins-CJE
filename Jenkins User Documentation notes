Jenkins is a self-contained, open source automation server which can be used to automate all sorts of tasks related to building, testing, and delivering or deploying software.

Jenkins can be installed through native system packages, Docker, or even run standalone by any machine with a Java Runtime Environment (JRE) installed.

The Jenkins credentials functionality is provided by the Credentials Binding plugin.

Jenkins can store the following types of credentials:

   Secret text - a token such as an API token (e.g. a GitHub personal access token),

   Username and password - which could be handled as separate components or as a colon separated string in the format username:password (read more about this in Handling credentials),

   Secret file - which is essentially secret content in a file,

   SSH Username with private key - an SSH public/private key pair,

   Certificate - a PKCS#12 certificate file and optional password, or

   Docker Host Certificate Authentication credentials.
   
 Credentials can be added to Jenkins by any Jenkins user who has the Credentials > Create permission (set through Matrix-based security). 
 
 Otherwise, any Jenkins user can add and configure credentials if the Authorization settings of your Jenkins instanceâ€™s Configure Global Security settings page is set to the default Logged-in users can do anything setting or Anyone can do anything setting.






